{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "Elasticsearch Cloudformation Sample",

    "Parameters": {
        "Environment": {
            "Description": "Environment (e.g. dev, int)",
            "Type": "String",
            "AllowedValues": ["dev", "test"]
        }
    },
    "Resources": {
		"ElasticSearchRole": {
	         "Type": "AWS::IAM::Role",
	         "Properties": {
	            "AssumeRolePolicyDocument": {
	               "Version" : "2012-10-17",
	               "Statement": [ {
	                  "Effect": "Allow",
	                  "Principal": {
	                     "Service": [ "ec2.amazonaws.com" ]
	                  },
	                  "Action": [ "sts:AssumeRole" ]
	               } ]
	            },
	            "Path": "/",
	            "Policies": [ {
	               "PolicyName": "elasticsearch",
	               "PolicyDocument": {
	                  "Version" : "2012-10-17",
					  "Statement": [
					    {
					      "Effect": "Allow",
					      "Action": "ec2:Describe*",
					      "Resource": "*"
					    },
					    {
					      "Effect": "Allow",
					      "Action": "elasticloadbalancing:Describe*",
					      "Resource": "*"
					    },
					    {
					      "Effect": "Allow",
					      "Action": [
					        "cloudwatch:ListMetrics",
					        "cloudwatch:GetMetricStatistics",
					        "cloudwatch:Describe*"
					      ],
					      "Resource": "*"
					    },
					    {
					      "Effect": "Allow",
					      "Action": "autoscaling:Describe*",
					      "Resource": "*"
					    }
					  ]
	               }
               } ]
            }
         },
         "ElasticSearchNodeInstanceProfile": {
	         "Type": "AWS::IAM::InstanceProfile",
	         "Properties": {
	            "Path": "/",
	            "Roles": [ {
	               "Ref": "ElasticSearchRole"
	            } ]
	         }
         },
        "ElasticSearchProductionNode1": {
            "Type": "AWS::EC2::Instance",
			"Metadata" : {
		        "AWS::CloudFormation::Init" : {
			          "config" : {
			            "packages" : {
			              "yum" : {
			                "python-jinja2"          : [],
							"git" : []
			              }
			            },
						"files" : {
						  "/home/ec2-user/ansible-hosts" : {
						    "content" : "localhost"
						  }
						},
			            "sources" : {
			              "/home/ec2-user/" : "https://github.com/ansible/ansible/archive/v1.6.2.tar.gz"
			            }
			          }
			        }
			      },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
							"DeleteOnTermination" : "false",
                            "VolumeSize": "40"
                        }
                    }
                ],
                "ImageId": "ami-2918e35e",
                "InstanceType": "m3.medium",
				"IamInstanceProfile": {
                            "Ref": "ElasticSearchNodeInstanceProfile"
                        },
                "KeyName": "elasticsearch",
                "SecurityGroups": [
                    {
                        "Ref": "ElasticSearchSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "Environment"
                        }
                    }
                ],
				"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
				          "#!/bin/bash\n",
				          "yum update -y aws-cfn-bootstrap\n",

				          "# Install Ansible\n", 
						  "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r ElasticSearchProductionNode1 ", " --region ", { "Ref" : "AWS::Region" }, "\n",
						  
						  "# Add Ansible Environment\n", 
						  "source /home/ec2-user/ansible-1.6.2/hacking/env-setup","\n",
						  
						  "# Run Ansible\n",
						  "ansible-pull -U https://github.com/aemruli/elasticsearch-aws.git -i /home/ec2-user/ansible-hosts","\n",
						  
						  "# All is well so signal success\n",
				          "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "WaitHandle1" }, "'\n"
				        ]]}}        
            }
        },
        "ElasticSearchProductionNode2": {
            "Type": "AWS::EC2::Instance",
			"Metadata" : {
		        "AWS::CloudFormation::Init" : {
			          "config" : {
			            "packages" : {
			              "yum" : {
			                "python-jinja2"          : [],
							"git" : []
			              }
			            },
						"files" : {
						  "/home/ec2-user/ansible-hosts" : {
						    "content" : "localhost"
						  }
						},
			            "sources" : {
			              "/home/ec2-user/" : "https://github.com/ansible/ansible/archive/v1.6.2.tar.gz"
			            }
			          }
			        }
			      },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
							"DeleteOnTermination" : "false",
                            "VolumeSize": "40"
                        }
                    }
                ],
                "ImageId": "ami-2918e35e",
                "InstanceType": "m3.medium",
				"IamInstanceProfile": {
                            "Ref": "ElasticSearchNodeInstanceProfile"
                        },
                "KeyName": "elasticsearch",
                "SecurityGroups": [
                    {
                        "Ref": "ElasticSearchSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": {
                            "Ref": "Environment"
                        }
                    }
                ],
				"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
				          "#!/bin/bash\n",
				          "yum update -y aws-cfn-bootstrap\n",

				          "# Install Ansible\n", 
						  "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r ElasticSearchProductionNode2 ", " --region ", { "Ref" : "AWS::Region" }, "\n",
						  
						  "# Add Ansible Environment\n", 
						  "source /home/ec2-user/ansible-1.6.2/hacking/env-setup","\n",
						  
						  "# Run Ansible\n",
						  "ansible-pull -U https://github.com/aemruli/elasticsearch-aws.git -i /home/ec2-user/ansible-hosts","\n",
						  
						  "# All is well so signal success\n",
				          "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "WaitHandle2" }, "'\n"
				        ]]}}        
            }
        },
        "ElasticSearchSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22 and 9020",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "46.5.170.73/32"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9200",
                        "ToPort": "9200",
                        "CidrIp": "46.5.170.73/32"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9300",
                        "ToPort": "9300",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ElasticSearchHostedZone": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneName": "mimacom.solutions.",
                "Comment": "DNS name for Elasticsearch server",
                "Name": {
                    "Fn::Join": [ "", [
                        {
                            "Ref": "Environment"
                        },
                        ".",
                        "els",
                        ".",
                        "mimacom.solutions" ,
                        "."
                    ] ]
                },
                "Type": "A",
                "TTL": "60",
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [ "ElasticSearchProductionNode1", "PublicIp" ]
                    },
                    {
                        "Fn::GetAtt": [ "ElasticSearchProductionNode2", "PublicIp" ]
                    }
                ]
            }
        },"WaitHandle1" : {
	      "Type" : "AWS::CloudFormation::WaitConditionHandle"
	    },

	    "WaitCondition1" : {
	      "Type" : "AWS::CloudFormation::WaitCondition",
	      "DependsOn" : "ElasticSearchProductionNode1",
	      "Properties" : {
	        "Handle" : {"Ref" : "WaitHandle1"},
	        "Timeout" : "300"
	      }
	    },
		"WaitHandle2" : {
			      "Type" : "AWS::CloudFormation::WaitConditionHandle"
			    },

			    "WaitCondition2" : {
			      "Type" : "AWS::CloudFormation::WaitCondition",
			      "DependsOn" : "ElasticSearchProductionNode1",
			      "Properties" : {
			        "Handle" : {"Ref" : "WaitHandle2"},
			        "Timeout" : "300"
			      }
			    }
     },                                                                          
    "Outputs": {
        "ElasticSearchHostName": {
            "Description": "Public hostname for the Elasticsearch Node",
            "Value": {
                "Ref": "ElasticSearchHostedZone"
            }
        }       
    }
}